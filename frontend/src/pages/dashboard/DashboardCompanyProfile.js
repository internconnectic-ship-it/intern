// src/pages/dashboard/DashboardCompanyProfile.jsx
import { useEffect, useState } from 'react';
import api from "../../axios"; // ‚úÖ ‡πÉ‡∏ä‡πâ instance ‡πÅ‡∏ó‡∏ô axios ‡∏ï‡∏£‡∏á ‡πÜ
import Header from '../../components/Header';

const API_URL = process.env.REACT_APP_API_URL || "http://localhost:5000";

const DashboardCompanyProfile = () => {
  const [company, setCompany] = useState({
    company_id: '',
    company_name: '',
    business_type: '',
    website: '',
    contact_email: '',
    contact_name: '',
    phone_number: '',
    address: '',
    google_maps_link: '',
    company_logo: '',
  });

  const [selectedFile, setSelectedFile] = useState(null);
  const [mapLinkError, setMapLinkError] = useState('');
  const [passwordForm, setPasswordForm] = useState({
    currentPassword: '',
    newPassword: '',
    confirmPassword: ''
  });

  const companyId = localStorage.getItem('companyId'); // ‡∏ï‡∏≤‡∏£‡∏≤‡∏á company
  const userId = localStorage.getItem('id');           // ‡∏ï‡∏≤‡∏£‡∏≤‡∏á users

  useEffect(() => {
    if (!companyId) return;
    api.get(`${API_URL}/api/company/${companyId}`)
      .then(res => setCompany(res.data))
      .catch(err => console.error('‚ùå ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß:', err));
  }, [companyId]);

  const handleChange = (e) => setCompany({ ...company, [e.target.name]: e.target.value });
  const handlePasswordChange = (e) => setPasswordForm({ ...passwordForm, [e.target.name]: e.target.value });
  const handleImageUpload = (e) => setSelectedFile(e.target.files?.[0] || null);

  const handleSave = async () => {
    // --- validate profile ---
    if (!company.company_name || !company.contact_name || !company.contact_email) {
      alert('‚ùå ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡πâ‡∏Ñ‡∏£‡∏ö‡∏ñ‡πâ‡∏ß‡∏ô ‡πÄ‡∏ä‡πà‡∏ô ‡∏ä‡∏∑‡πà‡∏≠‡∏ö‡∏£‡∏¥‡∏©‡∏±‡∏ó ‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠ ‡πÅ‡∏•‡∏∞‡∏≠‡∏µ‡πÄ‡∏°‡∏•');
      return;
    }
    const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
    if (!emailRegex.test(company.contact_email)) {
      alert('‚ùå ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏≠‡∏µ‡πÄ‡∏°‡∏•‡∏ú‡∏π‡πâ‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡πÉ‡∏´‡πâ‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á');
      return;
    }
    if (company.website) {
      try { new URL(company.website); }
      catch { alert('‚ùå URL ‡πÄ‡∏ß‡πá‡∏ö‡πÑ‡∏ã‡∏ï‡πå‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á'); return; }
    }
    const phoneRegex = /^\d+$/;
    if (!phoneRegex.test(company.phone_number)) {
      alert('‚ùå ‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£‡∏®‡∏±‡∏û‡∏ó‡πå‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô');
      return;
    }
    if (
      company.google_maps_link &&
      !company.google_maps_link.startsWith('https://www.google.com/maps/embed')
    ) {
      setMapLinkError('‚ùå ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏•‡∏¥‡∏á‡∏Å‡πå Embed ‡∏Ç‡∏≠‡∏á Google Maps');
      return;
    } else {
      setMapLinkError('');
    }

    try {
      let logoFilename = company.company_logo;
      if (selectedFile) {
        const formData = new FormData();
        formData.append('image', selectedFile);
        const res = await api.post(`${API_URL}/api/upload/profile-image`, formData);
        logoFilename = res.data.filename;
      }
      const updatedCompany = { ...company, company_logo: logoFilename };
      await api.put(`${API_URL}/api/company/${companyId}`, updatedCompany);
      localStorage.setItem('company_logo', logoFilename);

      // ‚úÖ ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô
      if (passwordForm.newPassword) {
        if (passwordForm.newPassword !== passwordForm.confirmPassword) {
          return alert("‚ùå ‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡πÉ‡∏´‡∏°‡πà‡πÅ‡∏•‡∏∞‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏£‡∏´‡∏±‡∏™‡πÑ‡∏°‡πà‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ô");
        }
        const strongPassword = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[@$!%*?&])[A-Za-z\d@$!%*?&]{8,}$/;
        if (!strongPassword.test(passwordForm.newPassword)) {
          return alert("‚ùå ‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏µ‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ô‡πâ‡∏≠‡∏¢ 8 ‡∏ï‡∏±‡∏ß‡∏≠‡∏±‡∏Å‡∏©‡∏£ ‡πÅ‡∏•‡∏∞‡∏õ‡∏£‡∏∞‡∏Å‡∏≠‡∏ö‡∏î‡πâ‡∏ß‡∏¢:\n- ‡∏ï‡∏±‡∏ß‡∏û‡∏¥‡∏°‡∏û‡πå‡πÄ‡∏•‡πá‡∏Å\n- ‡∏ï‡∏±‡∏ß‡∏û‡∏¥‡∏°‡∏û‡πå‡πÉ‡∏´‡∏ç‡πà\n- ‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç\n- ‡∏≠‡∏±‡∏Å‡∏Ç‡∏£‡∏∞‡∏û‡∏¥‡πÄ‡∏®‡∏©");
        }

        await api.post(`${API_URL}/api/change-password`, {
          id: userId,
          currentPassword: passwordForm.currentPassword,
          newPassword: passwordForm.newPassword
        });

        setPasswordForm({ currentPassword: '', newPassword: '', confirmPassword: '' });
        alert("‚úÖ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏•‡∏∞‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß");
      } else {
        alert('‚úÖ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß');
      }
    } catch (err) {
      console.error('‚ùå ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß:', err);
      alert(err.response?.data?.message || '‚ùå ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à');
    }
  };

  if (!company) return <p className="p-6 text-center text-white">‚è≥ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•...</p>;

  return (
    <div className="min-h-screen bg-[#9AE5F2] text-[#130347]">
      <Header />
      <div className="max-w-4xl mx-auto py-8">
        <h2 className="text-2xl font-bold mb-4">üè¢ ‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå‡∏™‡∏ñ‡∏≤‡∏ô‡∏õ‡∏£‡∏∞‡∏Å‡∏≠‡∏ö‡∏Å‡∏≤‡∏£</h2>

        <div className="bg-white rounded-xl shadow-lg p-6">
          {/* ‡πÇ‡∏•‡πÇ‡∏Å‡πâ */}
          <div className="flex items-center gap-4 mb-6">
            <img
              src={
                company.company_logo
                  ? company.company_logo
                  : '/default-profile.png'}
              alt="‡πÇ‡∏•‡πÇ‡∏Å‡πâ‡∏ö‡∏£‡∏¥‡∏©‡∏±‡∏ó"
              className="w-20 h-20 rounded-full object-cover border-4 border-[#6EC7E2]"
            />
            <div>
              <label className="block text-sm font-medium mb-1">‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡πÇ‡∏•‡πÇ‡∏Å‡πâ‡∏ö‡∏£‡∏¥‡∏©‡∏±‡∏ó</label>
              <input type="file" accept="image/*" onChange={handleImageUpload} />
            </div>
          </div>

          {/* ‡∏ü‡∏≠‡∏£‡πå‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ö‡∏£‡∏¥‡∏©‡∏±‡∏ó */}
          <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
            <div>
              <label className="block text-sm font-medium">‡∏£‡∏´‡∏±‡∏™</label>
              <input disabled name="company_id" value={company.company_id} className="w-full border rounded px-3 py-2 bg-gray-100" />
            </div>
            <div>
              <label className="block text-sm font-medium">‡∏ä‡∏∑‡πà‡∏≠</label>
              <input name="company_name" value={company.company_name} onChange={handleChange} className="w-full border rounded px-3 py-2" />
            </div>
            <div>
              <label className="block text-sm font-medium">‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏ò‡∏∏‡∏£‡∏Å‡∏¥‡∏à</label>
              <input name="business_type" value={company.business_type} onChange={handleChange} className="w-full border rounded px-3 py-2" />
            </div>
            <div>
              <label className="block text-sm font-medium">‡πÄ‡∏ß‡πá‡∏ö‡πÑ‡∏ã‡∏ï‡πå</label>
              <input name="website" value={company.website} onChange={handleChange} className="w-full border rounded px-3 py-2" />
            </div>
            <div>
              <label className="block text-sm font-medium">‡∏≠‡∏µ‡πÄ‡∏°‡∏•‡∏ú‡∏π‡πâ‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠</label>
              <input name="contact_email" value={company.contact_email} onChange={handleChange} className="w-full border rounded px-3 py-2" />
            </div>
            <div>
              <label className="block text-sm font-medium">‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠</label>
              <input name="contact_name" value={company.contact_name} onChange={handleChange} className="w-full border rounded px-3 py-2" />
            </div>
            <div>
              <label className="block text-sm font-medium">‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£‡∏®‡∏±‡∏û‡∏ó‡πå</label>
              <input name="phone_number" value={company.phone_number} onChange={handleChange} className="w-full border rounded px-3 py-2" />
            </div>
            <div>
              <label className="block text-sm font-medium">‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà</label>
              <textarea name="address" value={company.address} onChange={handleChange} rows="3" className="w-full border rounded px-3 py-2" />
            </div>
          </div>

          {/* Google Maps */}
          <div className="mt-4">
            <label className="block text-sm font-medium">Google Maps Embed Link</label>
            <label className="block font-medium text-sm text-gray-500">( ‡πÅ‡∏ä‡∏£‡πå ‚Üí ‡∏ù‡∏±‡∏á‡πÅ‡∏ú‡∏ô‡∏ó‡∏µ‡πà ‚Üí ‡∏Ñ‡∏±‡∏î‡∏•‡∏≠‡∏Å src )</label>
            <input
              name="google_maps_link"
              value={company.google_maps_link || ''}
              onChange={handleChange}
              placeholder="https://www.google.com/maps/embed?pb=..."
              className="w-full border rounded px-3 py-2"
            />
            {mapLinkError && <p className="text-red-600 text-sm mt-1">{mapLinkError}</p>}
          </div>
          {company.google_maps_link?.startsWith('https://www.google.com/maps/embed') && (
            <iframe
              src={company.google_maps_link}
              width="100%"
              height="250"
              style={{ border: 0, borderRadius: '10px' }}
              allowFullScreen
              loading="lazy"
              title="Google Map"
              className="mt-4"
            ></iframe>
          )}

          {/* üîë ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô */}
          <h2 className="text-lg font-bold text-[#130347] mt-6 mb-2">üîë ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô</h2>
          <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
            <div>
              <label className="block text-sm font-medium">‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô</label>
              <input type="password" name="currentPassword" value={passwordForm.currentPassword} onChange={handlePasswordChange} className="w-full border rounded px-3 py-2" />
            </div>
            <div>
              <label className="block text-sm font-medium">‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡πÉ‡∏´‡∏°‡πà</label>
              <input type="password" name="newPassword" value={passwordForm.newPassword} onChange={handlePasswordChange} className="w-full border rounded px-3 py-2" />
            </div>
            <div>
              <label className="block text-sm font-medium">‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡πÉ‡∏´‡∏°‡πà</label>
              <input type="password" name="confirmPassword" value={passwordForm.confirmPassword} onChange={handlePasswordChange} className="w-full border rounded px-3 py-2" />
            </div>
            <div>
              <span className="text-xs text-gray-500">***‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô ‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏£‡∏≠‡∏Å‡∏ä‡πà‡∏≠‡∏á‡∏ô‡∏µ‡πâ***</span>
            </div>
          </div>

          {/* ‡∏õ‡∏∏‡πà‡∏°‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å */}
          <button
            onClick={handleSave}
            className="w-full mt-6 py-2 rounded text-white bg-[#225EC4] hover:bg-[#063D8C]"
          >
            üíæ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å
          </button>
        </div>
      </div>
    </div>
  );
};

export default DashboardCompanyProfile;
