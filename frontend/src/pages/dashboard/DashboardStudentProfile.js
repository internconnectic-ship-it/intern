// src/pages/dashboard/DashboardStudentProfile.jsx

import React, { useState, useEffect } from 'react';
import api from "../../axios"; // ‚úÖ ‡πÉ‡∏ä‡πâ instance ‡πÅ‡∏ó‡∏ô axios ‡∏ï‡∏£‡∏á ‡πÜ
import Header from '../../components/Header';

const API_URL = process.env.REACT_APP_API_URL || "http://localhost:5000";
const DashboardStudentProfile = () => {
  const [student, setStudent] = useState({
    student_name: '',
    email: '',
    phone_number: '',
    major: '',
    faculty: '',
    university: '',
    gender: '',
    year_level: '',
    gpa: '',
    birth_date: '',
    age: '',
    special_skills: '',
    profile_image: '',
    intern_start_date: '',
    intern_end_date: ''
  });

  // ‚úÖ state ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô
  const [passwordForm, setPasswordForm] = useState({
    currentPassword: '',
    newPassword: '',
    confirmPassword: ''
  });

  const [selectedFile, setSelectedFile] = useState(null);

  // id ‡∏à‡∏≤‡∏Å localStorage
  const studentId = localStorage.getItem('studentId'); // ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ï‡∏≤‡∏£‡∏≤‡∏á student
  const userId = localStorage.getItem('id');       // ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ï‡∏≤‡∏£‡∏≤‡∏á users

  useEffect(() => {
    if (!studentId) return;
    api
      .get(`/api/student/${studentId}`)
      .then(res => setStudent(res.data || {}))
      .catch(err => console.error('‚ùå ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß', err));
  }, [studentId]);

  const handleChange = (e) => setStudent({ ...student, [e.target.name]: e.target.value });
  const handlePasswordChange = (e) =>
    setPasswordForm({ ...passwordForm, [e.target.name]: e.target.value });
  const handleImageUpload = (e) => setSelectedFile(e.target.files?.[0] || null);
  const formatDate = (d) => (d ? d.split('T')[0] : '');

  // ‚úÖ ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå + ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô
  const handleSubmit = async (e) => {
    e.preventDefault();

    // --- validate profile ---
    const gpa = parseFloat(student.gpa);
    if (isNaN(gpa) || gpa < 0 || gpa > 4)
      return alert("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å GPA ‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà‡∏£‡∏∞‡∏´‡∏ß‡πà‡∏≤‡∏á 0.00 ‡∏ñ‡∏∂‡∏á 4.00");

    const emailOk = /^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(student.email);
    if (!emailOk) return alert("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏≠‡∏µ‡πÄ‡∏°‡∏•‡πÉ‡∏´‡πâ‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á");

    if (!/^\d{10}$/.test(student.phone_number))
      return alert("‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£ 10 ‡∏´‡∏•‡∏±‡∏Å");

    if (student.birth_date && new Date(student.birth_date) > new Date())
      return alert("‡∏ß‡∏±‡∏ô‡πÄ‡∏Å‡∏¥‡∏î‡∏ï‡πâ‡∏≠‡∏á‡πÑ‡∏°‡πà‡πÄ‡∏Å‡∏¥‡∏ô‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô");

    if (
      student.intern_start_date &&
      student.intern_end_date &&
      new Date(student.intern_start_date) > new Date(student.intern_end_date)
    )
      return alert("‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ù‡∏∂‡∏Å‡∏á‡∏≤‡∏ô‡∏ï‡πâ‡∏≠‡∏á‡πÑ‡∏°‡πà‡∏°‡∏≤‡∏Å‡∏Å‡∏ß‡πà‡∏≤‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏™‡∏¥‡πâ‡∏ô‡∏™‡∏∏‡∏î");

    // --- upload image ---
    let profileImageFilename = student.profile_image;
    if (selectedFile) {
      try {
        const formData = new FormData();
        formData.append("image", selectedFile);
        const res = await api.post(
          "/api/upload/profile-image",
          formData
        );
        profileImageFilename = res.data.filename;
      } catch (err) {
        console.error("‚ùå ‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡∏•‡πâ‡∏°‡πÄ‡∏´‡∏•‡∏ß", err);
        return alert("‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏π‡∏õ");
      }
    }

    try {
      // --- save profile ---
      const updated = { ...student, profile_image: profileImageFilename };
      await api.put(`/api/student/${studentId}`, updated);
      localStorage.setItem("profile_image", profileImageFilename || "");
      localStorage.setItem("name", updated.student_name || "");

      // --- password change check ---
      if (passwordForm.newPassword) {
        // 1) confirm password ‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ô
        if (passwordForm.newPassword !== passwordForm.confirmPassword) {
          return alert("‚ùå ‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡πÉ‡∏´‡∏°‡πà‡πÅ‡∏•‡∏∞‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏£‡∏´‡∏±‡∏™‡πÑ‡∏°‡πà‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ô");
        }

        // 2) ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ñ‡∏ß‡∏≤‡∏°‡∏õ‡∏•‡∏≠‡∏î‡∏†‡∏±‡∏¢‡∏Ç‡∏≠‡∏á‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô
        const strongPassword = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[@$!%*?&])[A-Za-z\d@$!%*?&]{8,}$/;
        if (!strongPassword.test(passwordForm.newPassword)) {
          return alert(
            "‚ùå ‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏µ‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ô‡πâ‡∏≠‡∏¢ 8 ‡∏ï‡∏±‡∏ß‡∏≠‡∏±‡∏Å‡∏©‡∏£ ‡πÅ‡∏•‡∏∞‡∏õ‡∏£‡∏∞‡∏Å‡∏≠‡∏ö‡∏î‡πâ‡∏ß‡∏¢:\n- ‡∏ï‡∏±‡∏ß‡∏û‡∏¥‡∏°‡∏û‡πå‡πÄ‡∏•‡πá‡∏Å\n- ‡∏ï‡∏±‡∏ß‡∏û‡∏¥‡∏°‡∏û‡πå‡πÉ‡∏´‡∏ç‡πà\n- ‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç\n- ‡∏≠‡∏±‡∏Å‡∏Ç‡∏£‡∏∞‡∏û‡∏¥‡πÄ‡∏®‡∏©"
          );
        }

        // 3) ‡∏™‡πà‡∏á‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô (‡πÉ‡∏ä‡πâ userId ‡∏à‡∏≤‡∏Å users)
       await api.post(`${API_URL}/api/change-password`, {
        id: userId,
        currentPassword: passwordForm.currentPassword,
        newPassword: passwordForm.newPassword
      });


        setPasswordForm({
          currentPassword: "",
          newPassword: "",
          confirmPassword: "",
        });

        alert("‚úÖ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏•‡∏∞‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß");
      } else {
        alert("‚úÖ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß (‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡∏¢‡∏±‡∏á‡∏Ñ‡∏á‡πÄ‡∏î‡∏¥‡∏°)");
      }
    } catch (err) {
      console.error("‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î", err);
      alert(err.response?.data?.message || "‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î");
    }
  };

  return (
    <div className="min-h-screen bg-[#9AE5F2] text-[#063D8C]">
      <Header />

      {/* üëâ ‡∏ü‡∏≠‡∏£‡πå‡∏°‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå */}
      <form onSubmit={handleSubmit} className="w-full max-w-screen-xl mx-auto px-4 lg:px-8 py-8">
        <div className="mb-4">
          <h1 className="text-2xl font-extrabold text-[#130347]">üë§ ‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå‡∏ô‡∏¥‡∏™‡∏¥‡∏ï</h1>
          <p className="text-sm text-[#465d71]">
            ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡πà‡∏ß‡∏ô‡∏ï‡∏±‡∏ß ‡∏ä‡πà‡∏≠‡∏á‡∏ó‡∏≤‡∏á‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠ ‡πÅ‡∏•‡∏∞‡∏ä‡πà‡∏ß‡∏á‡πÄ‡∏ß‡∏•‡∏≤‡∏ù‡∏∂‡∏Å‡∏á‡∏≤‡∏ô‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì
          </p>
        </div>

        <div className="bg-white border border-[#E6F0FF] rounded-2xl shadow-sm p-6">
          {/* ‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå */}
          <div className="flex items-center gap-4 mb-6">
            <div className="w-24 h-24 rounded-full overflow-hidden ring-2 ring-[#E6F0FF] bg-[#F8FBFF]">
              {student.profile_image ? (
                <img
                  src={`${API_URL}/uploads/profile/${student.profile_image}`}
                  alt="‡∏£‡∏π‡∏õ‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå"
                  className="w-full h-full object-cover"
                />
              ) : (
                <div className="w-full h-full flex items-center justify-center text-[#225EC4] text-sm">
                  ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏£‡∏π‡∏õ
                </div>
              )}
            </div>
            <div className="flex-1">
              <label className="block text-sm font-medium text-[#225EC4]">‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏π‡∏õ‡πÇ‡∏õ‡∏£‡πÑ‡∏ü‡∏•‡πå</label>
              <input
                type="file"
                accept="image/*"
                onChange={handleImageUpload}
                className="mt-1 block w-full text-sm file:mr-3 file:rounded-full file:border-0 file:bg-[#6EC7E2] file:text-white file:px-4 file:py-2 hover:file:bg-[#4691D3]"
              />
            </div>
          </div>

          <div className="grid grid-cols-1 md:grid-cols-2 xl:grid-cols-3 gap-4">
            {[
              { label: '‡∏ä‡∏∑‡πà‡∏≠', name: 'student_name' },
              { label: '‡∏≠‡∏µ‡πÄ‡∏°‡∏•', name: 'email', type: 'email' },
              { label: '‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£', name: 'phone_number' },
              { label: '‡∏™‡∏≤‡∏Ç‡∏≤‡∏ß‡∏¥‡∏ä‡∏≤', name: 'major' },
              { label: '‡∏Ñ‡∏ì‡∏∞', name: 'faculty' },
              { label: '‡∏°‡∏´‡∏≤‡∏ß‡∏¥‡∏ó‡∏¢‡∏≤‡∏•‡∏±‡∏¢', name: 'university' },
              { label: '‡πÄ‡∏û‡∏®', name: 'gender' },
              { label: '‡∏ä‡∏±‡πâ‡∏ô‡∏õ‡∏µ', name: 'year_level', type: 'number' },
              { label: 'GPA', name: 'gpa', type: 'text', inputMode: 'decimal' },
              { label: '‡∏≠‡∏≤‡∏¢‡∏∏', name: 'age', type: 'number' },
            ].map(({ label, name, type = 'text', inputMode }) => (
              <div key={name}>
                <label className="block text-sm font-medium text-[#225EC4]">{label}</label>
                <input
                  name={name}
                  type={type}
                  inputMode={inputMode}
                  value={student[name] || ''}
                  onChange={handleChange}
                  className="w-full rounded-xl border border-[#E6F0FF] bg-[#F8FBFF] px-3 py-2 outline-none focus:ring-2 focus:ring-[#6EC7E2]"
                />
              </div>
            ))}

            <div>
              <label className="block text-sm font-medium text-[#225EC4]">‡∏ß‡∏±‡∏ô‡πÄ‡∏Å‡∏¥‡∏î</label>
              <input
                name="birth_date"
                type="date"
                value={formatDate(student.birth_date)}
                onChange={handleChange}
                className="w-full rounded-xl border border-[#E6F0FF] bg-[#F8FBFF] px-3 py-2 outline-none focus:ring-2 focus:ring-[#6EC7E2]"
              />
            </div>

            <div>
              <label className="block text-sm font-medium text-[#225EC4]">üóì ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ù‡∏∂‡∏Å‡∏á‡∏≤‡∏ô</label>
              <input
                type="date"
                name="intern_start_date"
                value={formatDate(student.intern_start_date)}
                onChange={handleChange}
                className="w-full rounded-xl border border-[#E6F0FF] bg-[#F8FBFF] px-3 py-2 outline-none focus:ring-2 focus:ring-[#6EC7E2]"
              />
            </div>

            <div>
              <label className="block text-sm font-medium text-[#225EC4]">üóì ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏™‡∏¥‡πâ‡∏ô‡∏™‡∏∏‡∏î‡∏ù‡∏∂‡∏Å‡∏á‡∏≤‡∏ô</label>
              <input
                type="date"
                name="intern_end_date"
                value={formatDate(student.intern_end_date)}
                onChange={handleChange}
                className="w-full rounded-xl border border-[#E6F0FF] bg-[#F8FBFF] px-3 py-2 outline-none focus:ring-2 focus:ring-[#6EC7E2]"
              />
            </div>

            {/* ‡∏ó‡∏±‡∏Å‡∏©‡∏∞‡∏û‡∏¥‡πÄ‡∏®‡∏© */}
            <div className="md:col-span-2 xl:col-span-3">
              <label className="block text-sm font-medium text-[#225EC4]">‡∏ó‡∏±‡∏Å‡∏©‡∏∞‡∏û‡∏¥‡πÄ‡∏®‡∏©</label>
              <textarea
                name="special_skills"
                rows={3}
                value={student.special_skills || ''}
                onChange={handleChange}
                className="w-full rounded-xl border border-[#E6F0FF] bg-[#F8FBFF] px-3 py-2 outline-none focus:ring-2 focus:ring-[#6EC7E2] resize-y"
              />
            </div>
          </div>

          {/* üëâ ‡∏Å‡∏•‡πà‡∏≠‡∏á‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô */}
          <h2 className="text-lg font-bold text-[#130347] mb-4">üîë ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô</h2>
          <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
            <div>
              <label className="block text-sm font-medium text-[#225EC4]">‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô</label>
              <input
                type="password"
                name="currentPassword"
                value={passwordForm.currentPassword}
                onChange={handlePasswordChange}
                className="w-full rounded-xl border border-[#E6F0FF] bg-[#F8FBFF] px-3 py-2"
              />
            </div>
            <div>
              <label className="block text-sm font-medium text-[#225EC4]">‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡πÉ‡∏´‡∏°‡πà</label>
              <input
                type="password"
                name="newPassword"
                value={passwordForm.newPassword}
                onChange={handlePasswordChange}
                className="w-full rounded-xl border border-[#E6F0FF] bg-[#F8FBFF] px-3 py-2"
              />
            </div>
            <div>
              <label className="block text-sm font-medium text-[#225EC4]">‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡πÉ‡∏´‡∏°‡πà</label>
              <input
                type="password"
                name="confirmPassword"
                value={passwordForm.confirmPassword}
                onChange={handlePasswordChange}
                className="w-full rounded-xl border border-[#E6F0FF] bg-[#F8FBFF] px-3 py-2"
              />
            </div>
            <div>
              <label className="block text-sm text-[#6d6d6d]">***‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏***</label>
              <span className="text-xs text-[#6d6d6d]">‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡πÑ‡∏°‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏£‡∏≠‡∏Å‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡πÉ‡∏´‡∏°‡πà</span>
            </div>
          </div>

          {/* ‡∏õ‡∏∏‡πà‡∏°‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å */}
          <button
            type="submit"
            className="mt-6 w-full rounded-full bg-[#225EC4] hover:bg-[#1b55b5] text-white py-3 font-semibold shadow-sm"
          >
            üíæ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å
          </button>
        </div>
      </form>
    </div>
  );
};

export default DashboardStudentProfile;
